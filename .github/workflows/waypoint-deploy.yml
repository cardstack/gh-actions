name: Waypoint Deploy

on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
      retain:
        required: false
        default: "1"
        type: string
      waypoint_version:
        required: false
        default: "0.11.3"
        type: string
      environment:
        required: true
        type: string
      working-directory:
        required: false
        type: string
        default: "."
      init:
        required: false
        type: boolean
        default: true
      efs-config:
        required: false
        type: string
        default: ""

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Init
        if: ${{ inputs.init }}
        uses: ./.github/actions/init

      - name: Set up env
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        env:
          INPUT_ENVIRONMENT: ${{ inputs.environment }}
        run: |
          echo "WAYPOINT_SERVER_TLS=1" >> $GITHUB_ENV
          if [ "${{ inputs.environment }}" = "production" ]; then
            echo "AWS_ROLE_ARN=arn:aws:iam::120317779495:role/waypoint" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_ADDR=${{ secrets.PRODUCTION_WAYPOINT_SERVER_ADDR }}" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_TOKEN=${{ secrets.PRODUCTION_WAYPOINT_SERVER_TOKEN }}" >> $GITHUB_ENV
            cp waypoint.prod.hcl waypoint.hcl
          elif [ "${{ inputs.environment }}" = "staging" ]; then
            echo "AWS_ROLE_ARN=arn:aws:iam::680542703984:role/waypoint" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_ADDR=${{ secrets.STAGING_WAYPOINT_SERVER_ADDR }}" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_TOKEN=${{ secrets.STAGING_WAYPOINT_SERVER_TOKEN }}" >> $GITHUB_ENV
          else
            echo "unrecognized environment"
            exit 1;
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - uses: lucasmelin/setup-waypoint@v1
        with:
          version: ${{ inputs.waypoint_version }}

      - name: Deploy app
        run: waypoint deploy -app=${{ inputs.app }} -plain -local -release=false
        working-directory: ${{ inputs.working-directory }}

      - name: Add EFS Config
        if: ${{ inputs.efs-config != '' }}
        uses: cardstack/gh-actions/waypoint-ecs-add-efs
        with:
          app: ${{ inputs.app }}
          config: ${{ inputs.efs-config }}
          waypoint-hcl: ${{ inputs.working-directory }}/waypoint.hcl

      - name: Wait service stable
        uses: cardstack/gh-actions/waypoint-wait-service-stable@main
        with:
          app: ${{ inputs.app }}
          waypoint-hcl: ${{ inputs.working-directory }}/waypoint.hcl

      - name: Release app
        run: waypoint release -app=${{ inputs.app }} -prune-retain=${{ inputs.retain }} -plain -local
        working-directory: ${{ inputs.working-directory }}

      - name: Send notification to Discord
        uses: cardstack/gh-actions/discord-notification-deploy@main
        if: ${{ always() }}
        with:
          app: ${{ inputs.app }}
          status: ${{ job.status }}
          environment: ${{ inputs.environment }}
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          is_ecs: "true"
